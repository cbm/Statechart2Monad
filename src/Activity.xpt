«IMPORT IAC»
«EXTENSION statechart2Monad::NodeHelper»
«DEFINE Activity FOR IAC::Node»
	«FILE ClassName(name)+"/"+ClassName(name)+".h" activities_outlet»
#ifndef _«ClassName(name)»_h_
#define _«ClassName(name)»_h_ 1

#include "architecture/IActivity.h"
			
class «ClassName(name)» : public IActivity {
			
public:
	
	int Execute ();
	
	void UserInit ();
	
	std::string GetName ();
	
};

#endif // _«ClassName(name)»_h_
	«ENDFILE»
	«FILE ClassName(name)+"/"+ClassName(name)+".cpp" activities_outlet»
#include "«ClassName(name)+".h"»"

namespace {
    ActivityRegistrar<«ClassName(name)»>::Type temp("«ClassName(name)»");
}

int «ClassName(name)»::Execute() {
	/* «activity» */
	return 0;
}

void «ClassName(name)»::UserInit () {
	;
}

std::string «ClassName(name)»::GetName () {
	return "«ClassName(name)»";
}
	«ENDFILE»
	«FILE ClassName(name)+"/"+"CMakeLists.txt" activities_outlet»
#if ( NOT ( ${TargetPlatform} STREQUAL "robot" AND ${RobotPlatform} STREQUAL "nao" ) )
#    return()
#endif ( NOT ( ${TargetPlatform} STREQUAL "robot" AND ${RobotPlatform} STREQUAL "nao" ) )

#include( ../../hal/robot/nao-1.6.0/bootstrap.cmake )

set ( ActivityName «ClassName(name)» )

set ( ActivitySrcs  «ClassName(name)+".cpp"» )

include ( ../activTemplate.cmake )

#use_lib(${ActivityName} ALCOMMON ALVALUE ALMATH LIBCORE TOOLS)	
	«ENDFILE»
«ENDDEFINE»